swagger: '2.0'
info:
  title: Dredd-contract-testing-demo
  version: 1.0.0
paths:
  /api/v1/bad-request:
    get:
      produces:
        - "application/json; charset=utf-8"
      parameters: []
      responses:
        '400':
          description: Bad request response
          schema:
            type: object
            properties:
              error:
                type: string
                example: Invalid request parameters
      summary: Simulate a bad request
  /api/v1/server-error:
    get:
      produces:
        - "application/json; charset=utf-8"
      parameters: []
      responses:
        '500':
          description: Internal server error response
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal server error
      summary: Simulate a server error
  /api/v1/users:
    x-summary: "Requests"
    get:
      produces:
        - "application/json; charset=utf-8"
      parameters: []
      responses:
        '200':
          description: A list of users
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
      summary: Get users
    post:
      summary: Create a new user
      consumes:
        - "application/json; charset=utf-8"
      produces:
        - "application/json; charset=utf-8"
      parameters:
        - in: body
          name: user
          description: User object that needs to be created
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Niharika"
      responses:
        '201':
          description: User created successfully
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: "Nikita"
        '400':
          description: Invalid user data
          schema:
            type: object
            properties:
              error:
                type: string
                example: User data is invalid
  /api/v1/users/{id}:
    x-summary: "Requests with id"
    put:
      produces:
        - "application/json; charset=utf-8"
      consumes:
        - "application/json; charset=utf-8"
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          x-example: 1
        - name: user
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Niharika"
            required:
              - name
      responses:
        '200':
          description: User updated successfully
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: "Niharika"
        '404':
          description: User not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: User not found
      summary: Update user by ID
    delete:
      produces:
        - "application/json; charset=utf-8"
      consumes:
        - "application/json; charset=utf-8"
      summary: Delete user by ID
      description: Deletes a user based on the provided ID.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID of the user to delete
          x-example: 1
      responses:
        '200':
          description: User deleted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: User deleted
        '404':
          description: User not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: User not found
  /api/v1/users/details/{id}:
    get:
      produces:
        - "application/json; charset=utf-8"
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          x-example: 1
      responses:
        '200':
          description: A detailed user object
          schema:
            type: object
            required:
              - id
              - name
              - email
              - age
              - address
            properties:
              id:
                type: integer
              name:
                type: string
              email:
                type: string
              age:
                type: integer
              address:
                type: string
            example:
              id: 1
              name: John Doe
              email: john.doe@example.com
              age: 30
              address: 1234 Elm Street
      summary: Get detailed user by ID
